###################################################
###                A L I A S E S                ###
###################################################

# instant edit configs
alias edit_zshconfig="$EDITOR $XDG_CONFIG_HOME/zsh/.zshrc.local"
alias edit_zshaliases="$EDITOR $XDG_CONFIG_HOME/zsh/.zshaliases"
alias edit_zshenv="$EDITOR $XDG_CONFIG_HOME/zsh/.zshenv"

## rebinds
# neovim
alias nv="nvim"

# ls
alias eza="eza --icons=always --color=always"
alias ls="eza --group-directories-first"
alias la="eza -lago --total-size --group-directories-first"
alias laa="eza -laghiuUo --changed --total-size --group-directories-first"
alias lss="/usr/bin/ls"

# grep
alias grep="grep --color=always"

# bat
alias bat="bat --theme=\"1337\" --style=\"header-filename,header-filesize,rule\""

# tmux
alias t="tmux new-session -A -s default"
alias tma="tmux attach -t"
alias tmd="tmux detach"
alias tmk="tmux kill-session -t"
alias tml="tmux list-sessions"
alias tmn="tmux new-session -s"

# copy to ...
alias clipboard="xclip -selection clipboard" # copy terminal stuff with 'cat file | clipboard'
alias clip="clipboard"
alias pastebin="curl -F 'file=@-' 0x0.st"
alias paste="pastebin"

# keep $HOME clean rebinds (xdg-ninja)
alias nvidia-settings="nvidia-settings --config=$XDG_CONFIG_HOME/nvidia/settings"
alias wget=wget --hsts-file="$XDG_DATA_HOME/wget-hsts"
alias adb='HOME="$XDG_DATA_HOME"/android adb'

# 'temporary' (lol!)
alias python='python3'

# kitty specific aliases
if [[ -n "$KITTY_INSTALLATION_DIR" ]] ; then
    alias kssh="kitten ssh"
    alias icat="kitten icat"
    alias kdiff="kitten diff"
fi


###################################################
###              F U N C T I O N S              ###
###################################################

# Weather
weather () {
    curl "wttr.in/$1?format=3"
}

# Print a motd in non-login shell
motd-interactive-shell () {
  motd_timeout=86400 # 24 hours
  timestamp_file="$XDG_CACHE_HOME/interactive-shell-motd"

  if [[ -e "$timestamp_file" ]] ; then
    last_motd_timestamp=$(cat "$timestamp_file")
    current_timestamp=$(date +%s)
    time_diff=$((current_timestamp - last_motd_timestamp))
    #echo "time until next motd:" $time_diff

    if [[ "$time_diff" -ge $motd_timeout ]] ; then
      echo "$current_timestamp" > "$timestamp_file"
      cat /etc/motd
    fi
  else
    # if timestamp file doesn't exist, create it
    date +%s > "$timestamp_file"
    cat /etc/motd
  fi
}
